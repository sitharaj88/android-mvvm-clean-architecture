/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @author Sitharaj Seenivasan
 * @date 22 Jun 2025
 * @version 1.0.0
 */

package com.sitharaj.notes.data.local.entity

import androidx.room.ColumnInfo
import androidx.room.Entity
import androidx.room.PrimaryKey


/**
 * Represents the synchronization state of a note entity in the local database.
 *
 * - [SYNCED]: The note is synchronized with the remote server.
 * - [PENDING]: The note has local changes that need to be synced.
 * - [DELETED]: The note is marked for deletion.
 * - [FAILED]: The note failed to sync.
 *
 * @author Sitharaj Seenivasan
 * @date 22 Jun 2025
 * @since 1.0.0
 */
enum class SyncState { SYNCED, PENDING, DELETED, FAILED }

/**
 * Represents a note entity in the local Room database.
 *
 * @property id Unique identifier for the note, auto-generated by Room.
 * @property title Title of the note.
 * @property content Content/body of the note.
 * @property timestamp Timestamp when the note was created or last modified (milliseconds since epoch).
 * @property syncState Current [SyncState] of the note (default: [SyncState.PENDING]).
 * @property lastModified Timestamp of the last modification made to the note (milliseconds since epoch).
 * @property lastSynced Timestamp when the note was last synced with the server, or null if never synced.
 *
 * @constructor Creates a new [NoteEntity] for local storage.
 *
 * @author Sitharaj Seenivasan
 * @date 22 Jun 2025
 * @version 1.0.0
 */
@Entity(tableName = "notes")
data class NoteEntity(
    /** Unique identifier for the note, auto-generated by Room. */
    @PrimaryKey(autoGenerate = true) val id: Int = 0,
    /** Title of the note. */
    val title: String,
    /** Content/body of the note. */
    val content: String,
    /** Timestamp when the note was created or last modified (milliseconds since epoch). */
    val timestamp: Long = System.currentTimeMillis(),
    /** Current [SyncState] of the note (default: [SyncState.PENDING]). */
    @ColumnInfo(defaultValue = "PENDING")
    val syncState: SyncState = SyncState.PENDING,
    /** Timestamp of the last modification made to the note (milliseconds since epoch). */
    val lastModified: Long = System.currentTimeMillis(),
    /** Timestamp when the note was last synced with the server, or null if never synced. */
    val lastSynced: Long? = null
)
